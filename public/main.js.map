{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,2J;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,UAAU,CAAC;IACrB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACc;AACV;AACW;AACb;AAEI;AACwB;AACH;AACS;AACZ;AACe;AACN;AACZ;AACR;AAC8B;AACrC;AACC;AAEhD,IAAM,SAAS,GAAW;IACxB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,8EAAa,EAAE;IACtC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,8EAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yFAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gFAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,6FAAkB,EAAE,WAAW,EAAE,CAAC,6DAAS,CAAC,EAAE;IAC9E,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,uFAAgB,EAAE,WAAW,EAAE,CAAC,6DAAS,CAAC,EAAE;CAC3E;AAEM;IACL,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AAC9C,CAAC;AAmCD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAjCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,mFAAe;gBACf,gFAAc;gBACd,yFAAiB;gBACjB,8EAAa;gBACb,6FAAkB;gBAClB,uFAAgB;aACjB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;gBAC/B,4EAAmB;gBACnB,wDAAU;gBACV,qEAAgB;gBAChB,6DAAS,CAAC,OAAO,CAAC;oBAChB,MAAM,EAAE;wBACN,WAAW,EAAE,WAAW;wBACxB,kBAAkB,EAAE,CAAC,gBAAgB,CAAC;wBACtC,iBAAiB,EAAE,CAAC,sBAAsB,CAAC;qBAC5C;iBACF,CAAC;aACH;YACD,SAAS,EAAE;gBACT,2EAAe;gBACf,6EAAoB;gBACpB,mEAAW;gBACX,6DAAS;aACV;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AClEtB,mB;;;;;;;;;;;ACAA,4P;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IALU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;;OACW,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B;;;;;;;;;;;;ACP/B,mB;;;;;;;;;;;ACAA,k2B;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;ACP1B,mB;;;;;;;;;;;ACAA,+nB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACT;AACsB;AACL;AAO1D;IAIE,wBAAoB,WAAwB,EAClC,oBAA0C,EAC1C,MAAc;QAFJ,gBAAW,GAAX,WAAW,CAAa;QAClC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE7B,iCAAQ,GAAR;IACA,CAAC;IAED,sCAAa,GAAb;QAAA,iBAiBC;QAhBC,IAAM,IAAI,GAAG;YACX,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB;QAED,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC;aACpC,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtD,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC1F,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACvC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;gBACtF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnC,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IA5BU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAKiC,kEAAW;YACZ,4EAAoB;YAClC,sDAAM;OANb,cAAc,CA6B1B;IAAD,qBAAC;CAAA;AA7B0B;;;;;;;;;;;;ACV3B,mB;;;;;;;;;;;ACAA,ukD;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACT;AACsB;AACL;AAO1D;IAEE,yBAAoB,WAAwB,EAClC,oBAA0C,EAC1C,MAAc;QAFJ,gBAAW,GAAX,WAAW,CAAa;QAClC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE7B,kCAAQ,GAAR;IACA,CAAC;IAED,uCAAa,GAAb;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAC3F,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjC,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAdU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAGiC,kEAAW;YACZ,4EAAoB;YAClC,sDAAM;OAJb,eAAe,CAgB3B;IAAD,sBAAC;CAAA;AAhB2B;;;;;;;;;;;;ACV5B,mB;;;;;;;;;;;ACAA,8GAA8G,WAAW,sFAAsF,eAAe,mDAAmD,YAAY,uB;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3O;AACV;AACkB;AAO1D;IAGE,0BAAoB,WAAwB,EAClC,MAAc;QADJ,gBAAW,GAAX,WAAW,CAAa;QAClC,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE7B,mCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;aAC1B,SAAS,CAAC,iBAAO;YAChB,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QAC3B,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,MAAM,CAAC,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IACP,CAAC;IAfU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAIiC,kEAAW;YAC1B,sDAAM;OAJb,gBAAgB,CAiB5B;IAAD,uBAAC;CAAA;AAjB4B;;;;;;;;;;;;ACT7B,mB;;;;;;;;;;;ACAA,0/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACT;AACyB;AACR;AACK;AAO/D;IAME,2BAAoB,eAAgC,EAC1C,oBAA0C,EAC1C,WAAwB,EACxB,MAAc;QAHJ,oBAAe,GAAf,eAAe,CAAiB;QAC1C,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QARxB,SAAI,GAAW,EAAE,CAAC;QAClB,aAAQ,GAAW,EAAE,CAAC;QACtB,UAAK,GAAW,EAAE,CAAC;QACnB,aAAQ,GAAW,EAAE,CAAC;IAKM,CAAC;IAE7B,oCAAQ,GAAR;IACA,CAAC;IAED,4CAAgB,GAAhB;QAAA,iBAkCC;QAjCC,IAAM,IAAI,GAAG;YACX,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB;QAED,iBAAiB;QACjB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACjD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;YAC/F,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,gBAAgB;QAChB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACpD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;YACjG,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QACD,SAAS;QACT,8FAA8F;QAC9F,IAAI;QAEJ,eAAe;QACf,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC;aAChC,SAAS,CAAC,cAAI;YACb,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,EAAC;gBACf,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,wBAAwB,EAAE,EAAE,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;gBACvG,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnC,CAAC;YAAC,IAAI,EAAC;gBACL,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;gBACrF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACtC,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAhDU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAOqC,0EAAe;YACpB,4EAAoB;YAC7B,kEAAW;YAChB,sDAAM;OATb,iBAAiB,CAkD7B;IAAD,wBAAC;CAAA;AAlD6B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXa;AACW;AACA;AAGtD;IACI,mBAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAEpE,CAAC;IAED,+BAAW,GAAX;QACI,EAAE,EAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,EAAC;YAC7B,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;IACL,CAAC;IAZQ,SAAS;QADrB,gEAAU,EAAE;yCAEwB,kEAAW,EAAkB,sDAAM;OAD3D,SAAS,CAarB;IAAD,gBAAC;CAAA;AAbqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLqB;AACI;AAEV;AACM;AACT;AACoB;AAMtD;IAIE,qBAAoB,IAAU,EACrB,SAA2B;QADhB,SAAI,GAAJ,IAAI,CAAM;QACrB,cAAS,GAAT,SAAS,CAAkB;IAAI,CAAC;IAEzC,kCAAY,GAAZ,UAAa,IAAI;QACf,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sCAAsC,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aAEtF,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAa,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;aAC7C,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,sCAAgB,GAAhB,UAAiB,IAAI;QACnB,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0CAA0C,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aAE1F,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAa,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;aAC7C,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,gCAAU,GAAV;QACE,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAChD,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qCAAqC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aAC9E,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAa,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;aAC7C,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,mCAAa,GAAb,UAAc,KAAK,EAAE,IAAI;QACvB,kDAAkD;QAClD,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACxC,qCAAqC;QACrC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,+BAAS,GAAT;QACE,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,8BAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACvD,CAAC;IAED,4BAAM,GAAN;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,YAAY,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IAED;;;;SAIE;IACM,iCAAW,GAAnB,UAAoB,KAAU;QAC5B,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,CAAC,+CAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,cAAc,CAAC,CAAC;IAC1D,CAAC;IAnEU,WAAW;QAJvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAM0B,kDAAI;YACV,mEAAgB;OALzB,WAAW,CAqEvB;IAAD,kBAAC;CAAA;AArEuB;;;;;;;;;;;;;;;;;;;;;;;;;ACZmB;AAK3C;IAEE;IAAgB,CAAC;IAEjB,0CAAgB,GAAhB,UAAiB,IAAI;QACnB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC,CAAC;YAC1F,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAAC,IAAI,EAAC;YACL,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAED,uCAAa,GAAb,UAAc,KAAK;QACjB,IAAI,EAAE,GAAG,yJAAyJ,CAAC;QACnK,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAC9C,CAAC;IAfU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,eAAe,CAiB3B;IAAD,sBAAC;CAAA;AAjB2B;;;;;;;;;;;;;ACL5B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n    <flash-messages></flash-messages>\\n    <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'mean-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http'; \nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { FlashMessagesModule, FlashMessagesService } from 'angular2-flash-messages';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst appRoutes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'home', component: HomeComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\n]\n\nexport function tokenGetter() {\n  return localStorage.getItem('access_token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule,\n    HttpModule,\n    HttpClientModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        whitelistedDomains: ['localhost:3001'],\n        blacklistedRoutes: ['localhost:3001/auth/']\n      }\n    })\n  ],\n  providers: [\n    ValidateService,\n    FlashMessagesService,\n    AuthService,\n    AuthGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-8 offset-md-2 text-center mt-5\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n      <h2 class=\\\"page-header\\\">\\n        Dashboard\\n      </h2>\\n      <p>Your dashboard</p>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n  <h1>MEAN App</h1>\\n  <p class=\\\"lead\\\">Welcome to our custom MEAN authentication application built from scratch</p>\\n  <div>\\n    <a class=\\\"btn btn-primary\\\"\\n      routerLink=\\\"/register\\\">Register</a> \\n      <a class=\\\"btn btn-light\\\"\\n      routerLink=\\\"/login\\\">Login</a>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <h3>Express Backend</h3>\\n    <p>A rock solid Node.js/Express server using Mongoose to organize models and query the database</p>\\n  </div>\\n  <div class=\\\"col\\\">\\n    <h3>Angular-CLI</h3>\\n    <p>Angular-CLI to generate components, services and more. Local dev server and easy compilation</p>\\n  </div>\\n  <div class=\\\"col\\\">\\n    <h3>JWT Tokens</h3>\\n    <p>Full featured authentication using JSON web tokens. Login and store user data</p>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-8 offset-md-2\\\">\\n  <h2 class=\\\"page-header\\\">Login</h2>\\n  <form (submit)=\\\"onLoginSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>Username</label>\\n      <input type=\\\"text\\\"\\n        [(ngModel)]=\\\"username\\\"\\n        name=\\\"username\\\"\\n        class=\\\"form-control\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Password</label>\\n      <input type=\\\"password\\\"\\n        [(ngModel)]=\\\"password\\\"\\n        name=\\\"password\\\"\\n        class=\\\"form-control\\\">\\n    </div>\\n    <input type=\\\"submit\\\"\\n      class=\\\"btn btn-primary\\\"\\n      value=\\\"Submit\\\">\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  constructor(private AuthService: AuthService,\n    private FlashMessagesService: FlashMessagesService,\n    private Router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n\n    this.AuthService.authenticateUser(user)\n      .subscribe(data => {\n        if (data.success) {\n          this.AuthService.storeUserData(data.token, data.user);\n          this.FlashMessagesService.show('Logged In', { cssClass: 'alert-success', timeout: 4000 });\n          this.Router.navigate(['/dashboard']);\n        } else {\n          this.FlashMessagesService.show(data.msg, { cssClass: 'alert-danger', timeout: 4000 });\n          this.Router.navigate(['/login']);\n        }\n      });\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\"\\n    routerLink=\\\"/\\\">MEAN App</a>\\n  <button class=\\\"navbar-toggler\\\"\\n    type=\\\"button\\\"\\n    data-toggle=\\\"collapse\\\"\\n    data-target=\\\"#navbarNav\\\"\\n    aria-controls=\\\"navbarNav\\\"\\n    aria-expanded=\\\"false\\\"\\n    aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\"\\n    id=\\\"navbarNav\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\"\\n        routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\"\\n          routerLink=\\\"/home\\\">Home</a>\\n      </li>\\n    </ul>\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n      <li class=\\\"nav-item\\\"\\n        *ngIf=\\\"!AuthService.loggedIn()\\\">\\n        <a class=\\\"nav-link\\\"\\n          routerLink=\\\"/dashboard\\\">Dashboard</a>\\n      </li>\\n      <li class=\\\"nav-item\\\"\\n        *ngIf=\\\"!AuthService.loggedIn()\\\">\\n        <a class=\\\"nav-link\\\"\\n          routerLink=\\\"/profile\\\">Profile</a>\\n      </li>\\n\\n      <li class=\\\"nav-item\\\"\\n        *ngIf=\\\"AuthService.loggedIn()\\\">\\n        <a class=\\\"nav-link\\\"\\n          routerLink=\\\"/login\\\">Login</a>\\n      </li>\\n      <li class=\\\"nav-item\\\"\\n        *ngIf=\\\"AuthService.loggedIn()\\\">\\n        <a class=\\\"nav-link\\\"\\n          routerLink=\\\"/register\\\">Register</a>\\n      </li>\\n      <li class=\\\"nav-item\\\"\\n        *ngIf=\\\"!AuthService.loggedIn()\\\">\\n        <a class=\\\"nav-link\\\"\\n          (click)=\\\"onLogoutClick()\\\"\\n          href=\\\"#\\\">Logout</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private AuthService: AuthService,\n    private FlashMessagesService: FlashMessagesService,\n    private Router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick() {\n    this.AuthService.logout();\n    this.FlashMessagesService.show('Logged Out', { cssClass: 'alert-success', timeout: 4000 });\n    this.Router.navigate(['/login']);\n    return false;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-8 offset-md-2\\\"\\n  *ngIf=\\\"user\\\">\\n  <h2 class=\\\"page-header\\\">\\n    {{user.name}}\\n  </h2>\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">Username: {{user.username}} </li>\\n    <li class=\\\"list-group-item\\\">Email: {{user.email}}</li>\\n  </ul>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router'\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\nuser: Object;\n\n  constructor(private AuthService: AuthService,\n    private Router: Router) { }\n\n  ngOnInit() {\n    this.AuthService.getProfile()\n      .subscribe(profile => {\n        this.user = profile.user;\n      },\n      err => {\n        console.log(err);\n        return false;\n      });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-8 offset-md-2\\\">\\n  <h2 class=\\\"page-header\\\">Register</h2>\\n  <form (submit)=\\\"onRegisterSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>Name</label>\\n      <input type=\\\"text\\\"\\n        [(ngModel)]=\\\"name\\\"\\n        name=\\\"name\\\"\\n        class=\\\"form-control\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Username</label>\\n      <input type=\\\"text\\\"\\n        [(ngModel)]=\\\"username\\\"\\n        name=\\\"username\\\"\\n        class=\\\"form-control\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Email</label>\\n      <input type=\\\"text\\\"\\n        [(ngModel)]=\\\"email\\\"\\n        name=\\\"email\\\"\\n        class=\\\"form-control\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Password</label>\\n      <input type=\\\"password\\\"\\n        [(ngModel)]=\\\"password\\\"\\n        name=\\\"password\\\"\\n        class=\\\"form-control\\\">\\n    </div>\\n    <input type=\\\"submit\\\"\\n      class=\\\"btn btn-primary\\\"\\n      value=\\\"Submit\\\">\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String = '';\n  username: String = '';\n  email: String = '';\n  password: String = '';\n\n  constructor(private validateService: ValidateService,\n    private FlashMessagesService: FlashMessagesService,\n    private AuthService: AuthService,\n    private Router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password\n    }\n\n    //Required Fields\n    if (!this.validateService.validateRegister(user)) {\n      this.FlashMessagesService.show('Fill all fields', { cssClass: 'alert-danger', timeout: 3000 });\n      return false;\n    }\n\n    //Validate Email\n    if (!this.validateService.validateEmail(user.email)) {\n      this.FlashMessagesService.show('Enter Valid Email', { cssClass: 'alert-danger', timeout: 3000 });\n      return false;\n    } \n    // else {\n    //   this.FlashMessagesService.show('Submited', { cssClass: 'alert-success', timeout: 3000 });\n    // }\n\n    //Register User\n    this.AuthService.registerUser(user)\n      .subscribe(data => {\n        if(data.success){\n          this.FlashMessagesService.show('You are now registered', { cssClass: 'alert-success', timeout: 3000 });\n          this.Router.navigate(['/login']);\n        } else{\n          this.FlashMessagesService.show('Error', { cssClass: 'alert-danger', timeout: 3000 });\n          this.Router.navigate(['/register']);\n        }\n      });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service'\n\n@Injectable()\nexport class AuthGuard implements CanActivate{\n    constructor(private AuthService: AuthService, private Router: Router) {\n\n    }\n\n    canActivate() {\n        if(!this.AuthService.loggedIn()){\n            return true;\n        } else {\n            this.Router.navigate(['/login']);\n            return false;\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport { Http, Headers, } from '@angular/http';\n\nimport { map } from 'rxjs/operators';\nimport { catchError } from 'rxjs/operators'\nimport { Observable } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(private http: Http,\n    public jwtHelper: JwtHelperService) { }\n\n  registerUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/register', user, { headers: headers })\n      // .map(res => res.json());\n      .pipe(map((response: any) => response.json()))\n      .pipe(catchError(this.handleError));\n  }\n\n  authenticateUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/authenticate', user, { headers: headers })\n      // .map(res => res.json());\n      .pipe(map((response: any) => response.json()))\n      .pipe(catchError(this.handleError));\n  }\n\n  getProfile() {\n    let headers = new Headers();\n    this.loadToken();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('http://localhost:3000/users/profile', { headers: headers })\n      .pipe(map((response: any) => response.json()))\n      .pipe(catchError(this.handleError));\n  }\n\n  storeUserData(token, user) {\n    //jwt look for this path (id_token) automatically \n    localStorage.setItem('id_token', token);\n    //local storage only storage a string\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn(){\n    return this.jwtHelper.isTokenExpired(this.authToken);\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n  /**\n\t * Handle error\n\t * @param error\n\t * @returns {any}\n\t */\n  private handleError(error: any) {\n    console.error(error);\n    return Observable.throw(error.json() || 'Server error');\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if (user.name === \"\" || user.email === \"\" || user.username === \"\" || user.password === \"\") {\n      return false;\n    } else{\n      return true;\n    }\n  }\n\n  validateEmail(email){\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}